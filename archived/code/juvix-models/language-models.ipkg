package language-models

modules = Library.TypesAndFunctions
    , Library.FunctionsAndRelations
    , Library.Test.FunctionsAndRelationsTest
    , Library.Test.TestLibrary
    , IdrisSTL.Semiring
    , External.IntegerSquareRoot
    , Library.Decidability
    , Geb.GebAtom
    , Geb.Geb
    , Geb.Test.GebTest
    , Geb.GebConcept
    , Geb.Test.GebConceptTest
    , Geb.GebSExp
    , Geb.Test.GebSExpTest
    , Geb.CExp
    , Geb.Test.CExpTest
    , Category.Category
    , Library.List
    , Theories.SimplyTypedLambdaCalculus
    , Library.FiniteTypes
    , OldSExp.SExpressions
    , OldSExp.SExpressionsWithFiniteAtomTypes
    , Category.Isomorphism
    , Category.Universality
    , Category.Naturality
    , Category.SumsAndProducts
    , DaoOfFP.Chapter2
    , DaoOfFP.Chapter3
    , DaoOfFP.Chapter4
    , DaoOfFP.Chapter5
    , Library.ListSubstitution
    , Category.Composition
    , Category.ComputableCategories
    , QCWF.CWF
    , QCWF.QCWF
    , RefinedSExp.List
    , RefinedSExp.Data
    , RefinedSExp.Test.ListTest
    , RefinedSExp.PairVariant.SExp
    , RefinedSExp.PairVariant.Test.SExpTest
    , RefinedSExp.ComputableFunctions
    , RefinedSExp.Test.ComputableFunctionsTest
    , RefinedSExp.SExpApplicatives
    , RefinedSExp.Test.SExpApplicativesTest
    , RefinedSExp.RefinedSExp
    , RefinedSExp.Test.RefinedSExpTest
    , RefinedSExp.RefinementInterpretation
    , RefinedSExp.Test.RefinementInterpretationTest
    , RefinedSExp.SExpFin
    , RefinedSExp.Test.SExpFinTest
    , RefinedSExp.AlgebraicSExp
    , RefinedSExp.Test.AlgebraicSExpTest
    , RefinedSExp.AlgebraicSExpInterpretation
    , RefinedSExp.Test.AlgebraicSExpInterpretationTest
    , RefinedSExp.Computation
    , RefinedSExp.Test.ComputationTest
    , RefinedSExp.SExp
    , RefinedSExp.Test.SExpTest
    , RefinedSExp.Naming
    , RefinedSExp.Test.NamingTest
    , RefinedSExp.Interpretation
    , RefinedSExp.Test.InterpretationTest
    , Datatypes.AlgebraicTypes
    , Datatypes.Test.AlgebraicTypesTest
    , Datatypes.Datatypes
    , Datatypes.Test.DatatypesTest
    , Datatypes.InductiveDatatypes
    , Datatypes.Test.InductiveDatatypesTest
    , Datatypes.DependentAlgebraicTypes
    , Datatypes.Test.DependentAlgebraicTypesTest
    , Datatypes.DependentInductiveDatatypes
    , Datatypes.Test.DependentInductiveDatatypesTest
    , Theories.AlgebraicTheory
    , Theories.Test.AlgebraicTheoryTest
    , Theories.InductiveTypeTheory
    , Theories.Test.InductiveTypeTheoryTest
    , Theories.DependentAlgebraicTheory
    , Theories.Test.DependentAlgebraicTheoryTest
    , Theories.DependentInductiveTypeTheory
    , Theories.Test.DependentInductiveTypeTheoryTest
    , Theories.HigherOrderRecursion
    , Theories.Test.HigherOrderRecursionTest
    , RefinedSExp.Old.List
    , RefinedSExp.Old.Test.ListTest
    , RefinedSExp.Old.RefinedList
    , RefinedSExp.Old.Test.RefinedListTest
    , RefinedSExp.Old.SExp
    , RefinedSExp.Old.Test.SExpTest
    , RefinedSExp.Old.RefinedSExp
    , RefinedSExp.Old.Test.RefinedSExpTest
    , RefinedSExp.Old.OldSExp
    , RefinedSExp.Old.Test.OldSExpTest
    , RefinedSExp.Old.InductiveSExp
    , RefinedSExp.Old.Test.InductiveSExpTest
    , RefinedSExp.Old.ADT
    , RefinedSExp.Old.Test.ADTTest
    , RefinedSExp.Old.DependentADT
    , RefinedSExp.Old.Test.DependentADTTest
    , RefinedSExp.Old.DependentMorphism
    , RefinedSExp.Old.Test.DependentMorphismTest
    , RefinedSExp.Old.Test.TestLibrary
    , RefinedSExp.ListVariant.Test.TestLibrary
    , RefinedSExp.ListVariant.List
    , RefinedSExp.ListVariant.Test.ListTest
    , RefinedSExp.ListVariant.RefinedList
    , RefinedSExp.ListVariant.Test.RefinedListTest
    , RefinedSExp.ListVariant.SExp
    , RefinedSExp.ListVariant.Test.SExpTest
    , RefinedSExp.ListVariant.RefinedSExp
    , RefinedSExp.ListVariant.Test.RefinedSExpTest
    , ReflectiveLanguages.Substitutive
    , ReflectiveLanguages.Test.SubstitutiveTest
    , ReflectiveLanguages.Interpretations.SubstitutiveInterpretation
    , ReflectiveLanguages.Interpretations.Test.SubstitutiveInterpretationTest
    , ReflectiveLanguages.QExp
    , ReflectiveLanguages.Test.QExpTest
    , ReflectiveLanguages.Interpretations.QExpInterpretation
    , ReflectiveLanguages.Interpretations.Test.QExpInterpretationTest
    , Executable.Test.Main

depends = contrib, network

sourcedir = "src"

opts = "--total --warnpartial"

main = Executable.Test.Main
executable = language-models-test
